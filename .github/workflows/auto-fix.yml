name: Auto Fix

on:
  issue_comment:
    types: [created]
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      fix_type:
        description: 'Tipo de corre√ß√£o'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - format
          - clippy
          - dependencies
          - security

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  # Auto-fix ativado por coment√°rio
  comment-trigger:
    name: Comment Trigger
    if: |
      github.event_name == 'issue_comment' && 
      github.event.issue.pull_request && 
      contains(github.event.comment.body, '/autofix')
    runs-on: ubuntu-latest
    steps:
      - name: Check permissions
        uses: actions/github-script@v7
        with:
          script: |
            const { data: permission } = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: context.actor
            });
            
            if (!['admin', 'write'].includes(permission.permission)) {
              await github.rest.reactions.createForIssueComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: context.payload.comment.id,
                content: '-1'
              });
              throw new Error('Insufficient permissions');
            }
            
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            });

  # Formata√ß√£o autom√°tica
  auto-format:
    name: Auto Format Code
    if: |
      github.event_name == 'pull_request' || 
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/autofix')) ||
      (github.event_name == 'workflow_dispatch' && contains(github.event.inputs.fix_type, 'all|format'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Format Rust code
        run: |
          cargo fmt --all
          echo "‚úÖ C√≥digo Rust formatado" >> format_log.txt
      
      - name: Format Frontend code
        run: |
          cd frontend
          npm ci
          npx prettier --write "src/**/*.{ts,tsx,js,jsx,css}" || true
          echo "‚úÖ C√≥digo Frontend formatado" >> ../format_log.txt
      
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          if git diff --staged --quiet; then
            echo "Nenhuma mudan√ßa de formata√ß√£o necess√°ria"
          else
            git commit -m "style: auto-format code üé®"
            git push
          fi

  # Corre√ß√µes do Clippy
  auto-clippy-fix:
    name: Auto Fix Clippy Warnings
    if: |
      github.event_name == 'pull_request' || 
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/autofix')) ||
      (github.event_name == 'workflow_dispatch' && contains(github.event.inputs.fix_type, 'all|clippy'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libxdo-dev
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      
      - name: Apply Clippy fixes
        run: |
          cargo clippy --fix --allow-dirty --allow-staged || true
          echo "‚úÖ Corre√ß√µes do Clippy aplicadas" >> clippy_log.txt
      
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          if git diff --staged --quiet; then
            echo "Nenhuma corre√ß√£o do Clippy necess√°ria"
          else
            git commit -m "fix: apply clippy suggestions üîß"
            git push
          fi

  # Atualiza√ß√£o de depend√™ncias
  auto-update-deps:
    name: Auto Update Dependencies
    if: |
      (github.event_name == 'workflow_dispatch' && contains(github.event.inputs.fix_type, 'all|dependencies')) ||
      github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Update Rust dependencies
        run: |
          cargo update
          echo "‚úÖ Depend√™ncias Rust atualizadas" >> deps_log.txt
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Update npm dependencies
        run: |
          cd frontend
          npm update
          npm audit fix || true
          echo "‚úÖ Depend√™ncias npm atualizadas" >> ../deps_log.txt
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies üì¶'
          title: 'chore: atualiza√ß√£o autom√°tica de depend√™ncias'
          body: |
            ## üì¶ Atualiza√ß√£o Autom√°tica de Depend√™ncias
            
            Este PR foi criado automaticamente para atualizar as depend√™ncias do projeto.
            
            ### Altera√ß√µes:
            - Depend√™ncias Rust atualizadas via `cargo update`
            - Depend√™ncias npm atualizadas via `npm update`
            - Vulnerabilidades corrigidas via `npm audit fix`
            
            ### Checklist:
            - [ ] Testes passando
            - [ ] Build funcionando
            - [ ] Sem breaking changes
          branch: auto-update-dependencies
          delete-branch: true

  # Corre√ß√µes de seguran√ßa
  auto-security-fix:
    name: Auto Security Fixes
    if: |
      (github.event_name == 'workflow_dispatch' && contains(github.event.inputs.fix_type, 'all|security'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run security fixes
        run: |
          # Rust security
          cargo install cargo-audit || true
          cargo audit fix || true
          
          # NPM security
          cd frontend
          npm audit fix --force || true
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'security: auto-fix vulnerabilities üîí'
          title: 'security: corre√ß√µes autom√°ticas de seguran√ßa'
          body: |
            ## üîí Corre√ß√µes Autom√°ticas de Seguran√ßa
            
            Este PR foi criado automaticamente para corrigir vulnerabilidades de seguran√ßa.
            
            ### A√ß√µes realizadas:
            - `cargo audit fix` para depend√™ncias Rust
            - `npm audit fix --force` para depend√™ncias npm
            
            ‚ö†Ô∏è **ATEN√á√ÉO**: Revise cuidadosamente as mudan√ßas antes de fazer merge.
          branch: auto-security-fixes
          delete-branch: true

  # Corre√ß√£o de erros comuns
  auto-common-fixes:
    name: Auto Common Fixes
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}
      
      - name: Fix common issues
        run: |
          # Remover trailing whitespace
          find . -type f \( -name "*.rs" -o -name "*.ts" -o -name "*.tsx" \) -exec sed -i 's/[[:space:]]*$//' {} \;
          
          # Adicionar newline no final dos arquivos
          find . -type f \( -name "*.rs" -o -name "*.ts" -o -name "*.tsx" \) -exec sh -c 'tail -c1 {} | read -r _ || echo >> {}' \;
          
          # Corrigir imports n√£o utilizados em Rust
          cargo fix --allow-dirty --allow-staged || true
          
          echo "‚úÖ Corre√ß√µes comuns aplicadas" >> common_fixes_log.txt
      
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          if git diff --staged --quiet; then
            echo "Nenhuma corre√ß√£o comum necess√°ria"
          else
            git commit -m "fix: apply common fixes üõ†Ô∏è"
            git push
          fi